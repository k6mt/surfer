import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'java'
    id "com.vanniktech.maven.publish" version "0.28.0"
    id 'signing'
}

group = 'io.github.k6mt'
version = '1.0.3'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

signing {
    sign publishing.publications
}

mavenPublishing {
    signAllPublications()
    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)

    coordinates("io.github.k6mt", "surfer", "1.0.3")

    pom {
        name = 'surfer'
        description = 'surfer'
        url = '<https://github.com/k6mt/surfer>'

        licenses {
            license {
                name = "The Apache License, Version 2.0"
                url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "https://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }

        developers {
            developer {
                id = 'jjoonior'
                name = 'Injoo Huh'
                email = 'jjoonior97@gmail.com'
            }
        }

        scm {
            connection = 'scm:git:github.com/k6mt/surfer.git'
            developerConnection = 'scm:git:ssh://github.com/k6mt/surfer.git'
            url = 'https://github.com/k6mt/surfer/tree/develop'
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-aop:3.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.4.4'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.19.0'
    implementation 'com.github.oshi:oshi-core:6.8.1'
    implementation 'com.opencsv:opencsv:5.9'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.26.4'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.assertj:assertj-core:3.25.3'
}

//build for frontend
def frontendDir = "$projectDir/frontend/surfer"

sourceSets {
    main {
        resources {
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources { dependsOn "copyBuildFiles" }

tasks.register("deleteCopiesFile", Delete) {
    delete file("$projectDir/src/main/resources/META-INF/resources/k6mt-surfer")
}

tasks.register('installReact', Exec) {
    workingDir("$frontendDir")
    inputs.dir("$frontendDir")
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install'
    } else {
        commandLine "npm", "audit", "fix"
        commandLine "npm", "install"
    }
}

tasks.register("buildReact", Exec) {
    dependsOn("installReact")
    workingDir("$frontendDir")
    inputs.dir("$frontendDir")
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}

tasks.register("copyBuildFiles", Copy) {
    dependsOn("deleteCopiesFile", "buildReact")
    from("$frontendDir/dist")
    into("$projectDir/src/main/resources/META-INF/resources/k6mt-surfer")
}

afterEvaluate {
    tasks.named("sourcesJar") {
        dependsOn("copyBuildFiles")
    }
}
